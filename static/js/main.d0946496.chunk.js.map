{"version":3,"sources":["Components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","state","classBtnVal","name","country","age","phone","id","searchName","employees","results","this","data","className","type","class","placeholder","onChange","e","setState","target","value","filter","employee","last","toLowerCase","includes","location","scope","map","src","picture","thumbnail","alt","first","dob","login","uuid","Component","App","fetch","then","response","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,MAAQ,CACJC,YAAa,CAAEC,KAAM,OAAQC,QAAS,OAAQC,IAAK,OAAQC,MAAO,OAAQC,GAAI,QAC9EC,WAAY,GACZC,UAAW,EAAKT,MAAMS,UAAUC,SAPjB,E,0CAUnB,WAAU,IAAD,SAC0CC,KAAKV,MAA/BO,GADhB,EACGN,YADH,EACgBM,YAAYC,EAD5B,EAC4BA,UAChBE,KAAKX,MAAdY,KAER,OACI,sBAAKC,UAAU,YAAf,UACI,uBACIC,KAAK,OACLC,MAAM,eACNC,YAAY,sBACZC,SAAU,SAACC,GACP,EAAKC,SAAS,CAAEX,WAAYU,EAAEE,OAAOC,QACrC,EAAKF,SAAS,CACVV,UAAWA,EAAUa,QAAO,SAACC,GACzB,OAAOA,EAASpB,KAAKqB,KAAKC,cAAcC,SAASlB,EAAWiB,uBAM5E,uBACIX,KAAK,OACLC,MAAM,eACNC,YAAY,oBACZC,SAAU,SAACC,GACP,EAAKC,SAAS,CAAEX,WAAYU,EAAEE,OAAOC,QACrC,EAAKF,SAAS,CACVV,UAAWA,EAAUa,QAAO,SAACC,GACzB,OAAOA,EAASI,SAASvB,QAAQqB,cAAcC,SAASlB,EAAWiB,uBAMnF,wBAAOZ,UAAU,iCAAjB,UACI,gCACI,+BACI,oBAAIe,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,qBAGR,gCACKnB,EAAUoB,KAAI,SAACN,GAAD,OACX,qBAAIV,UAAU,YAAd,UACI,6BACI,qBAAKiB,IAAKP,EAASQ,QAAQC,UAAWC,IAAI,iCAE9C,+BACKV,EAASpB,KAAK+B,MADnB,IAC2BX,EAASpB,KAAKqB,QAEzC,6BAAKD,EAASI,SAASvB,UACvB,6BAAKmB,EAASY,IAAI9B,MAClB,6BAAKkB,EAASjB,QACd,+BACKiB,EAAShB,GAAGJ,KADjB,IACwBoB,EAAShB,GAAGc,WAXTE,EAASa,MAAMC,qB,GA1DvCC,aCEdC,E,kDACnB,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXW,KAAM,MAHS,E,qDAOnB,WAAqB,IAAD,OAClB4B,MAAM,yCAAyCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAAC7B,GACvF,EAAKO,SAAS,CAAEP,c,oBAIpB,WACE,OAAO,qBAAKC,UAAU,OAAf,SAAuBF,KAAKV,MAAMW,MAAQ,cAAC,EAAD,CAAOH,UAAWE,KAAKV,MAAMW,a,GAfjD0B,aCQlBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0946496.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        classBtnVal: { name: 'none', country: 'none', age: 'none', phone: 'none', id: 'none' },\n        searchName: '',\n        employees: this.props.employees.results\n    };\n\n    render() {\n        const { classBtnVal, searchName, employees } = this.state;\n        const { data } = this.props;\n\n        return (\n            <div className=\"container\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Filter by Last Name\"\n                    onChange={(e) => {\n                        this.setState({ searchName: e.target.value });\n                        this.setState({\n                            employees: employees.filter((employee) => {\n                                return employee.name.last.toLowerCase().includes(searchName.toLowerCase());\n                            })\n                        });\n                    }}\n                />\n\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Filter by Country\"\n                    onChange={(e) => {\n                        this.setState({ searchName: e.target.value });\n                        this.setState({\n                            employees: employees.filter((employee) => {\n                                return employee.location.country.toLowerCase().includes(searchName.toLowerCase());\n                            })\n                        });\n                    }}\n                />\n\n                <table className=\"table table-dark table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Country</th>\n                            <th scope=\"col\">Age</th>\n                            <th scope=\"col\">Phone</th>\n                            <th scope=\"col\">ID</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {employees.map((employee) => (\n                            <tr className=\"table-row\" key={employee.login.uuid}>\n                                <td>\n                                    <img src={employee.picture.thumbnail} alt=\"random thumbnail of person\" />\n                                </td>\n                                <td>\n                                    {employee.name.first} {employee.name.last}\n                                </td>\n                                <td>{employee.location.country}</td>\n                                <td>{employee.dob.age}</td>\n                                <td>{employee.phone}</td>\n                                <td>\n                                    {employee.id.name} {employee.id.value}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport 'react-table/react-table.css';\nimport Table from '../src/Components/Table';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://randomuser.me/api/?results=50').then((response) => response.json()).then((data) => {\n      this.setState({ data });\n    });\n  }\n\n  render() {\n    return <div className=\"home\">{this.state.data && <Table employees={this.state.data} />}</div>;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}